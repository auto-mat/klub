# Generated by Django 2.2.18 on 2021-02-11 12:07

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('aklub', "0093_auto_20210211_1251")
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('basic_purpose', models.CharField(choices=[('action', 'Action'), ('petition', 'Petition'), ('camp', 'Camp')], default='action', max_length=128, verbose_name='Basic Purpose')),
                ('program', models.CharField(blank=True, choices=[('', '---'), ('education', 'Education'), ('PsB', 'PsB'), ('monuments', 'Monuments'), ('nature', 'Nature'), ('eco_consulting', 'Eco consulting'), ('children_section ', "Children's Section")], default='', max_length=128, verbose_name='Program')),
                ('is_internal', models.BooleanField(default=False, verbose_name='Only for internal members')),
                ('age_from', models.PositiveIntegerField(blank=True, null=True, verbose_name='Age from')),
                ('age_to', models.PositiveIntegerField(blank=True, null=True, verbose_name='Age to')),
                ('indended_for', models.CharField(choices=[('everyone', 'Everyone'), ('adolescents_and_adults', 'Adolescents and adults'), ('children', 'Children'), ('parents_and_children', 'Parents and children'), ('newcomers', 'Newcomers')], default='everyone', max_length=128, verbose_name='Indended for')),
                ('participation_fee', models.PositiveIntegerField(blank=True, null=True, verbose_name='Participation fee')),
                ('meeting', models.CharField(blank=True, max_length=128, verbose_name='Meeting at the event')),
                ('grant', models.CharField(choices=[('no_grant', 'No Grant'), ('MEYS', 'Ministry of Education, Youth and Sports'), ('others', 'Others')], default='no_grant', max_length=128, verbose_name='Grant')),
                ('focus_on_members', models.BooleanField(default=False, verbose_name='Focus on members')),
                ('public_on_web', models.BooleanField(default=False, verbose_name='Public on webpage')),
                ('entry_form_url', models.URLField(blank=True, null=True, verbose_name='Url address of register form')),
                ('name', models.CharField(help_text='Choose some unique name for this campaign', max_length=100, verbose_name='Name')),
                ('variable_symbol_prefix', models.PositiveIntegerField(blank=True, help_text='Number between 10000-99999', null=True, validators=[django.core.validators.MinValueValidator(10000), django.core.validators.MaxValueValidator(99999)], verbose_name='Variable_symbol_prefix')),
                ('description', models.TextField(blank=True, help_text='Description of this campaign', max_length=3000, verbose_name='Description')),
                ('note', models.TextField(blank=True, help_text='Note of this campaign', max_length=3000, verbose_name='Note')),
                ('real_yield', models.FloatField(blank=True, help_text='Use if yield differs from counted value', null=True, verbose_name='Real yield')),
                ('slug', models.SlugField(blank=True, default=None, help_text='Identifier of the campaign', max_length=100, null=True, unique=True, verbose_name='Slug')),
                ('enable_signing_petitions', models.BooleanField(default=False, verbose_name='Enable registration through petition/mailing list forms')),
                ('enable_registration', models.BooleanField(default=False, verbose_name='Enable registration through donation forms')),
                ('allow_statistics', models.BooleanField(default=False, verbose_name='Allow statistics exports')),
                ('email_confirmation_redirect', models.URLField(blank=True, null=True, verbose_name='Redirect to url after email confirmation')),
                ('date_from', models.DateField(blank=True, null=True, verbose_name='Date from')),
                ('date_to', models.DateField(blank=True, null=True, verbose_name='Date to')),
            ],
            options={
                'verbose_name': 'Event',
                'verbose_name_plural': 'Events',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EventType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of event type', max_length=100, verbose_name='Name')),
                ('description', models.TextField(blank=True, help_text='Description of this type', max_length=3000, verbose_name='Description')),
            ],
            options={
                'verbose_name': 'Event type',
                'verbose_name_plural': 'Event types',
                'managed': False,
            },
        ),

        migrations.AddField(
            model_name='event',
            name='administrative_units',
            field=models.ManyToManyField(to='aklub.AdministrativeUnit', verbose_name='administrative units'),
        ),
        migrations.AddField(
            model_name='event',
            name='event_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='events', to='events.EventType', verbose_name='Event type'),
        ),
        migrations.AddField(
            model_name='event',
            name='result',
            field=models.ManyToManyField(blank=True, to='interactions.Result', verbose_name='Acceptable results of communication'),
        ),
    ]
